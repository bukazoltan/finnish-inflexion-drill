{"version":3,"sources":["serviceWorker.js","index.js"],"names":["Boolean","window","location","hostname","match","cases","cases_singular","slice","console","log","cases_plural","length","FinnishWord","props","className","finnish_word","RightCard","fontSize","style","cls","src","image","text","addInvalid","onOffValues","singular","for_comparison","ret","offset","i","push","NounSettings","switchAll","onClick","type","id","name","checked","singularCasesOn","reduce","a","b","onChange","htmlFor","pluralCasesOn","temp","offsetSg","offsetPl","caseName","offsetSgCopy","offsetPlCopy","readOnly","disabled","checkboxes","UserTextInput","handleKeyPress","event","key","enterCallback","state","value","this","background_cls","placeholder","currentWord","onKeyPress","evt","setState","target","ref","reference","autoFocus","React","Component","WordFlag","nouns","Object","keys","data","textRef","createRef","JSON","parse","localStorage","getItem","generateNewWord","word","ans","form","tran","kotus","currentAnswer","currentTranslation","currentKotusType","currentFormName","textInputBG","checkInput","bind","flicker","switchOnOff","pluralityIndex","caseIndex","picked_form_str","wordIndex","Math","floor","random","singularOn","pluralOn","alert","caseOrd","formIndex","forms","colorCSSClass","setTimeout","index","newCasesOn","setItem","stringify","user_input","validNext","includes","current","computeFontSize","l","max","min","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.14e9223b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport kotusNouns from './kotus_nouns.json';\nimport data from './top_nouns.json'\nimport * as serviceWorker from './serviceWorker';\n\nconst plurality = ['Singular', 'Plural']\nconst cases = ['nominative', 'accusative', 'genitive', 'partitive',\n  'inessive (-ssA)', 'elative (-stA)', 'illative (hVn)',\n  'adessive (-llA)', 'ablative (-ltA)', 'allative (-lle)',\n  'essive (-nA)', 'translative (-ksi)',\n  'instructive (-in)', 'abessive (-ttA)', 'comitative (-ne)']\n\n//nominative sg is trivial and accusative officially does not exist\n// and instructive+comitative is only plural\nconst cases_singular = [...cases.slice(2, 12), cases[13]]\nconsole.log(cases_singular)\n//remove accusative\nconst cases_plural = [cases[0], ...cases.slice(2, cases.length)]\n\n\nfunction FinnishWord(props) {\n  return (\n    <div className=\"card word-card lcard card-text ltext\"><p className=\"\">{props.finnish_word}</p></div>\n  )\n}\n\nfunction RightCard(props) {\n  console.log(props.fontSize)\n  const style = {\n    fontSize: props.fontSize+\"em\",\n  }\n  return (\n    <div className={\"container card word-card rcard \" + props.cls}>\n      <div className=\"row no-gutters align-items-center h-100\">\n        <div className=\"col-sm-1\">\n          <img className=\"rcard-image\" src={props.image} />\n        </div>\n        <div className=\"col-sm-11 \">\n          <p className=\"card-text rtext\" style={style}>{props.text}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction addInvalid(onOffValues, singular) {\n  const for_comparison = singular ? cases_singular : cases_plural;\n  let ret = [];\n  let offset = 0;\n  for (let i = 0; i < cases.length; ++i) {\n    if (for_comparison[i - offset] === cases[i]) {\n      ret.push(onOffValues[i - offset]);\n    } else {\n      ret.push(-1);\n      offset++;\n    }\n  }\n  return ret;\n}\n\nfunction indeterminateCheckbox(props) {\n  let checked = props.truthArray.reduce((a, b) => a && b)\n  let unchecked = props.truthArray.reduce((a, b) => a && !b)\n  return (\n    <input type=\"checkbox\" id={props.id} checked={checked}\n      onChange={() => props.onClick(props.singular, props.index)} />\n  )\n}\n\nfunction NounSettings(props) {\n  function checkboxes() {\n    let temp = [];\n    let offsetSg = 0;\n    let offsetPl = 0;\n    for (let i = 0; i < props.cases.length; ++i) {\n      let caseName = props.cases[i];\n      const offsetSgCopy = offsetSg;\n      const offsetPlCopy = offsetPl;\n      temp.push(\n        <div className=\"col-sm-2\">\n          {caseName}\n        </div>)\n      if (props.singularCasesOn[i] !== -1) {\n        temp.push(\n          <div className=\"col-sm-1 align-self-center\">\n            <input type=\"checkbox\" id=\"gg\" name=\"gg\" checked={props.singularCasesOn[i]}\n              onChange={() => props.onClick(true, i - offsetSgCopy)} />\n\n          </div>);\n      }\n      else {\n        temp.push(\n          <div className=\"col-sm-1 align-self-center\">\n            <input type=\"checkbox\" id=\"gg\" name=\"gg\" checked={false} readOnly disabled={true} />\n          </div>);\n        offsetSg++;\n      }\n      if (props.pluralCasesOn[i] !== -1) {\n        temp.push(\n          <div className=\"col-sm-1 align-self-center\">\n            <input type=\"checkbox\" id=\"gg\" name=\"gg\" checked={props.pluralCasesOn[i]}\n              onChange={() => props.onClick(false, i - offsetPlCopy)} />\n          </div>);\n      }\n      else {\n        temp.push(\n          <div className=\"col-sm-1 align-self-center\">\n            <input type=\"checkbox\" id=\"gg\" name=\"gg\" checked={false} readOnly disabled={true} />\n          </div>);\n        offsetPl++;\n      }\n\n      temp.push(\n        <div className=\"col-sm-8\">\n\n        </div>);\n    }\n    return temp;\n  }\n\n  function switchAll(singular) {\n    return () => {\n      if (singular) {\n        for (let i = 0; i < cases_singular.length; ++i) {\n          props.onClick(singular, i);\n        }\n      }\n      else {\n        for (let i = 0; i < cases_plural.length; ++i) {\n          props.onClick(singular, i);\n        }\n      }\n      // console.log(props.singularCasesOn)\n      // console.log(props.singularCasesOn.reduce((a, b) => a || (b&&b!==-1)))\n    }\n  }\n  // console.log(props.singularCasesOn)\n  // console.log(props.singularCasesOn.reduce((a, b) => a || (b&&b!==-1)),false)\n  return (\n    <div className=\"row align-items-center\">\n      <div className=\"col-sm-2\">\n        {//TODO: settings image\n        }\n      </div>\n      <div className=\"col-sm-1\">\n        <input type=\"checkbox\" id=\"sg_cb\" name=\"gg\" checked={props.singularCasesOn.reduce((a, b) => a || (b && b !== -1), false)} onChange={switchAll(true)} />\n        <label htmlFor=\"sg_cb\">Singular</label>\n      </div>\n      <div className=\"col-sm-1\">\n        <input type=\"checkbox\" id=\"pl_cb\" name=\"gg\" checked={props.pluralCasesOn.reduce((a, b) => a || (b && b !== -1), false)} onChange={switchAll(false)} />\n        <label htmlFor=\"pl_cb\">Plural</label>\n      </div>\n\n      <div className=\"col-sm-8\">\n        TBD\n      </div>\n      {checkboxes()}\n    </div>\n  )\n}\n\n\nclass UserTextInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: null,\n    };\n  }\n\n  handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      this.props.enterCallback(this.state.value);\n    }\n  }\n  render() {\n    //{this.props.errorState?\"flag-uk.svg\":\"\"}\n    return (\n      <div className=\"word-input-flex\">\n        <input type=\"text\" className={\"word-input \" + this.props.background_cls}\n          placeholder={\"type '\" + this.props.currentWord + \"' in the form specified\"} onKeyPress={this.handleKeyPress}\n          onChange={(evt) => { this.setState({ value: evt.target.value }); }}\n          ref={this.props.reference} autoFocus />\n      </div>\n    )\n  }\n}\n\nclass WordFlag extends React.Component {\n  constructor(props) {\n    super(props);\n    this.nouns = Object.keys(data);\n    this.textRef = React.createRef();\n    const singularCasesOn = JSON.parse(localStorage.getItem('singularCasesOn'))||[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n    const pluralCasesOn = JSON.parse(localStorage.getItem('pluralCasesOn'))||[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n    const [word, ans, form, tran, kotus] = this.generateNewWord(this.nouns, singularCasesOn, pluralCasesOn);\n    this.state = {\n      currentWord: word,\n      currentAnswer: ans,\n      currentTranslation: tran,\n      currentKotusType: kotus,\n      currentFormName: form,\n      textInputBG: 'black-bg',\n      singularCasesOn: singularCasesOn,\n      pluralCasesOn: pluralCasesOn,\n    };\n    this.checkInput = this.checkInput.bind(this);\n    this.flicker = this.flicker.bind(this);\n    this.switchOnOff = this.switchOnOff.bind(this);\n  }\n\n  generateNewWord(keys, singularCasesOn, pluralCasesOn) {\n    const wordIndex = Math.floor(Math.random() * keys.length);\n    const singularOn = singularCasesOn.reduce((a, b) => a || b);\n    const pluralOn = pluralCasesOn.reduce((a, b) => a || b);\n    console.log(singularCasesOn, pluralCasesOn);\n    let pluralityIndex;\n    if (singularOn && pluralOn) {\n      pluralityIndex = Math.floor(Math.random() * 2);\n    } else if (singularOn) {\n      pluralityIndex = 0;\n    } else if (pluralOn) {\n      pluralityIndex = 1;\n    } else {\n      alert(\"You need to specify at least one case!\")\n    }\n\n    let caseIndex;\n    if (pluralityIndex === 0) {//singular\n      let caseOrd = Math.floor(Math.random() * singularCasesOn.reduce((a, b) => a + b));\n      for (let i = 0; i < singularCasesOn.length; ++i) {\n        if (singularCasesOn[i]) {\n          caseOrd--;\n        }\n        if(caseOrd<0){\n          caseIndex=i;\n          break;\n        }\n      }\n      // caseIndex = caseOrd+offset;\n    } else {//plural\n      let caseOrd = Math.floor(Math.random() * pluralCasesOn.reduce((a, b) => a + b));\n      for (let i = 0; i < pluralCasesOn.length; ++i) {\n        if (pluralCasesOn[i]) {\n          caseOrd--;\n        }\n        if(caseOrd<0){\n          caseIndex=i;\n          break;\n        }\n      }\n    }\n    let picked_form_str;\n    if (pluralityIndex === 0) {\n      picked_form_str = \"Singular \" + cases_singular[caseIndex];\n    }\n    if (pluralityIndex === 1) {\n      picked_form_str = \"Plural \" + cases_plural[caseIndex];\n    }\n    const formIndex = cases_singular.length * pluralityIndex + caseIndex\n    const word = keys[wordIndex];\n    console.log(\"plurality: \" + pluralityIndex + \" caseIndex: \" + caseIndex + \" formIndex: \" + formIndex)\n    console.log(data[word].forms[formIndex]);\n    return [word, data[word].forms[formIndex], picked_form_str, data[word].tran, data[word].kotus];\n  }\n\n  flicker(colorCSSClass) {\n    this.setState({ textInputBG: colorCSSClass },\n      () => {\n        setTimeout(() => {\n          this.setState({ textInputBG: 'black-bg' })\n        }, 100);\n\n      });\n  }\n\n  switchOnOff(singular, index) {\n    // console.log(singular,index)\n    if (singular) {\n      let newCasesOn = this.state.singularCasesOn;\n      newCasesOn[index] = !newCasesOn[index];\n      this.setState({\n        singularCasesOn: newCasesOn,\n      })\n      localStorage.setItem('singularCasesOn', JSON.stringify(newCasesOn));\n    } else {\n      let newCasesOn = this.state.pluralCasesOn;\n      newCasesOn[index] = !newCasesOn[index];\n      this.setState({\n        pluralCasesOn: newCasesOn,\n      })\n      localStorage.setItem('pluralCasesOn', JSON.stringify(newCasesOn));\n    }\n  }\n\n  checkInput(user_input) {\n    const validNext = (this.state.singularCasesOn.reduce((a, b) => a || b) || this.state.pluralCasesOn.reduce((a, b) => a || b));\n    if ((this.state.currentAnswer.includes(user_input) && validNext)) {\n      console.log(\"Correct\");\n      const [word, ans, form, tran, kotus] = this.generateNewWord(this.nouns, this.state.singularCasesOn, this.state.pluralCasesOn);\n      this.setState({\n        currentWord: word,\n        currentAnswer: ans,\n        currentTranslation: tran,\n        currentKotusType: kotus,\n        currentFormName: form,\n      });\n      this.textRef.current.value = '';\n      this.flicker(\"green-bg\")\n    } else {\n      this.flicker(\"red-bg\")\n    }\n    if (!validNext) {\n      alert(\"You need to specify at least one case!\");\n    }\n  }\n\n  render() {\n    function computeFontSize(text) {\n      let l = text.length;\n      return Math.max(Math.min(2,(2+33/22 - l/18)),0.6)\n    }\n    return (\n      <div className=\"word-flag\">\n        <div /*class=\"card gray\"*/>\n          <div className=\"row card-flex\">\n\n            <div className=\"l-stretch\">\n              <FinnishWord finnish_word={this.state.currentWord} />\n            </div>\n\n            <div className=\"r-stretch\">\n              <RightCard text={this.state.currentTranslation} fontSize={computeFontSize(this.state.currentTranslation)} cls='blue' image=\"translation.svg\" />\n              <RightCard text={this.state.currentFormName} fontSize={computeFontSize(this.state.currentFormName)} cls='red' image=\"target.svg\" />\n              <RightCard text={this.state.currentKotusType} fontSize={computeFontSize(this.state.currentKotusType)} cls='yellow' image=\"kotus_type.svg\" />\n              {/* https://en.wiktionary.org/wiki/Appendix:Finnish_nominal_inflection/nuoripari\n              https://en.wiktionary.org/wiki/Appendix:Finnish_conjugation */}\n            </div>\n\n          </div>\n\n        </div>\n        <div className=\"card-flex\">\n          <UserTextInput enterCallback={this.checkInput} currentWord={this.state.currentWord}\n            reference={this.textRef} background_cls={this.state.textInputBG} />\n        </div>\n        <div className=\"card settings mx-auto\">\n          <NounSettings cases={cases} singularCasesOn={addInvalid(this.state.singularCasesOn, true)}\n            pluralCasesOn={addInvalid(this.state.pluralCasesOn, false)} onClick={this.switchOnOff} />\n        </div>\n      </div>\n\n    );\n  }\n}\n\nReactDOM.render(\n  <WordFlag />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}