{"version":3,"sources":["serviceWorker.js","index.js"],"names":["Boolean","window","location","hostname","match","plurality","cases","validSgCases","validPlCases","map","FinnishWord","props","style","fontSize","className","finnish_word","RightCard","cls","alt","src","image","text","WorkingCheckbox","type","checked","onChange","GreyedOutCheckbox","readOnly","disabled","CheckboxRow","generateCheckbox","form","value","onChangeFun","key","replace","onSingular","onClick","index","onPlural","length","NounSettings","switchAll","singular","offset","casesOn","singularCasesOn","pluralCasesOn","allIndexes","Array","keys","a","allSingularOn","allSingularOff","allPluralOn","allPluralOff","filter","formsOn","slice","reduce","b","id","htmlFor","forms","href","target","rel","UserTextInput","flicker","colorCSSClass","setState","textInputBG","setTimeout","handleKeyPress","event","currentAnswer","includes","state","onCorrectAnswer","newValue","i","Math","min","len","this","placeholder","currentWord","onKeyPress","evt","ref","reference","autoFocus","React","Component","WordManager","generateNewWord","wordIndex","floor","random","currentData","word","formsOnCount","el","formSubsetIndex","trueFormIndex","currentEntry","data","currentFormName","currentTranslation","tran","currentKotusType","kotus","console","log","switchOnOff","indexes","isArray","afterChange","localStorage","setItem","formSettingsName","JSON","stringify","alert","topWords","top","kotusWords","topWordsKeys","Object","kotusWordsKeys","mode","dataSettingsName","parse","getItem","defaultForms","UserIO","computeFontSize","defaultSize","textSpace","l","coeffs","max","process","ReactDOM","render","topNouns","kotusNouns","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a40124cf.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport kotusNouns from './kotus_nouns.json';\nimport topNouns from './top_nouns.json'\nimport * as serviceWorker from './serviceWorker';\n\n// import './checkbox.css'\n\nconst ALWAYS_INVALID = -1;\nconst plurality = ['singular', 'plural'];\nconst cases = ['nominative', 'genitive', 'partitive',\n  'inessive (-ssA)', 'elative (-stA)', 'illative (-hVn)',\n  'adessive (-llA)', 'ablative (-ltA)', 'allative (-lle)',\n  'essive (-nA)', 'translative (-ksi)',\n  'instructive (-in)', 'abessive (-ttA)', 'comitative (-ne)'];\n//nominative sg is trivial and accusative officially does not exist\n// and instructive+comitative is only plural\nconst validSgCases = [ALWAYS_INVALID, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ALWAYS_INVALID, 1, ALWAYS_INVALID];\nconst validPlCases = cases.map(() => 1)\n\n// const cases_singular = [...cases.slice(2, 12), cases[13]]\n// const cases_plural = [cases[0], ...cases.slice(2, cases.length)]\n\n\nfunction FinnishWord(props) {\n  const style = {\n    fontSize: props.fontSize + \"px\",\n  }\n  return (\n    <div className=\"card word-card lcard card-text ltext\"><p className=\"\" style={style}>{props.finnish_word}</p></div>\n  )\n}\n\nfunction RightCard(props) {\n  const style = {\n    fontSize: props.fontSize + \"px\",\n  }\n  return (\n    <div className={\"container card word-card rcard \" + props.cls}>\n      <div className=\"row no-gutters align-items-center h-100\">\n        <div className=\"col-sm-1\">\n          <img className=\"rcard-image\" alt=\"\" src={props.image} />\n        </div>\n        <div className=\"col-sm-11 \">\n          <p className=\"card-text rtext\" style={style}>{props.text}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction IndeterminateCheckbox(props) {\n  let checked = props.truthArray.reduce((a, b) => a && b)\n  let unchecked = props.truthArray.reduce((a, b) => a && !b)\n  return (\n    <input type=\"checkbox\" id={props.id} checked={checked}\n      onChange={() => props.onClick(props.singular, props.index)} />\n  )\n}\n\nfunction WorkingCheckbox(props) {\n  return (\n    <input type=\"checkbox\" checked={props.checked}\n      onChange={props.onChange} />\n  )\n}\n\nfunction GreyedOutCheckbox() {\n  return (\n    <input type=\"checkbox\" checked={false} readOnly disabled={true} />\n  )\n}\n\nfunction CheckboxRow(props) {\n  let generateCheckbox = (form, value, onChangeFun) => {\n    if (value !== -1) {\n      return <WorkingCheckbox key={\"checkbox-\" + form.replace(\" \", \"-\")}\n        checked={value} onChange={onChangeFun} />\n    } else {\n      return <GreyedOutCheckbox key={\"checkbox-\" + form.replace(\" \", \"-\")} />\n    }\n  }\n\n  return (\n    <div className=\"row align-items-center\">\n      <div className=\"col-sm-6\">\n        {props.form}\n      </div>\n      <div className=\"col-sm-3\">\n        {generateCheckbox(props.form + \"-sg\", props.onSingular, () => props.onClick(props.index))}\n      </div>\n      <div className=\"col-sm-3\">\n        {generateCheckbox(props.form + \"-pl\", props.onPlural, () => props.onClick(props.index + cases.length))}\n      </div>\n    </div>\n  )\n}\n\nfunction NounSettings(props) {\n  function switchAll(singular) {\n    return () => {\n      let offset = singular ? 0 : cases.length;\n      let casesOn = singular ? singularCasesOn : pluralCasesOn;\n      let allIndexes = [...Array(cases.length).keys()].map(a => a + offset);\n      // console.log(allIndexes)\n      if ((singular && (allSingularOn || allSingularOff)) || (!singular && (allPluralOn || allPluralOff))) {\n        props.onClick(allIndexes);\n      } else {\n        props.onClick(allIndexes.filter((a, index) => !casesOn[index] && casesOn[index] !== -1));\n      }\n    }\n  }\n\n  let singularCasesOn = props.formsOn.slice(0, cases.length);\n  let allSingularOn = singularCasesOn.reduce((a, b) => a && (b || b === -1), true);\n  let allSingularOff = singularCasesOn.reduce((a, b) => a && (!b || b === -1), true);\n  let pluralCasesOn = props.formsOn.slice(cases.length);\n  let allPluralOn = pluralCasesOn.reduce((a, b) => a && (b || b === -1), true);\n  let allPluralOff = pluralCasesOn.reduce((a, b) => a && (!b || b === -1), true);\n\n  return (\n    <div className=\"card settings mx-auto\">\n      <div className=\"row\">\n        <div className=\"col-sm-5\">\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              {//TODO: settings image\n              }\n            </div>\n            <div className=\"col-sm-3 control-group\">\n              <input type=\"checkbox\" id=\"sg_cb\" onChange={switchAll(true)}\n                checked={allSingularOn} />\n              <label htmlFor=\"sg_cb\">Singular</label>\n            </div>\n            <div className=\"col-sm-3\">\n              <input type=\"checkbox\" id=\"pl_cb\" onChange={switchAll(false)}\n                checked={allPluralOn} />\n              <label htmlFor=\"pl_cb\">Plural</label>\n            </div>\n          </div>\n\n\n          {props.forms.slice(0, cases.length).map((form, index) => <CheckboxRow key={form}\n            form={form.slice(\"Singular \".length)} onClick={props.onClick} index={index}\n            onSingular={singularCasesOn[index]} onPlural={pluralCasesOn[index]} />)}\n        </div>\n        <div className=\"col-sm-4\">\n          <dl>\n            <li>press ',' to show the next letter</li>\n            <li>press '.' to show the answer</li>\n            <li>press '/' to go generate a different word</li>\n            {/* <li>press ';' to generate a different form of the same word</li> */}\n          </dl>\n        </div>\n        <div className=\"col-sm-3\">\n          <a href=\"https://uusikielemme.fi/finnish-grammar/\" target=\"_blank\" rel='noopener noreferrer'>Learn more at Uusi kielemme\n          <img src=\"https://uusikielemme.fi/wp-content/uploads/new-u.png\" style={{ \"width\": \"100px\" }} />\n           (not affiliated in any way)</a>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\nclass UserTextInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n      textInputBG: 'black-bg',\n    };\n  }\n\n  flicker = (colorCSSClass) => {\n    this.setState({ textInputBG: colorCSSClass },\n      () => {\n        setTimeout(() => {\n          this.setState({ textInputBG: 'black-bg' })\n        }, 100);\n\n      });\n  }\n\n  handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      if (this.props.currentAnswer.includes(this.state.value)) {\n        this.props.onCorrectAnswer();\n        this.flicker(\"green-bg\");\n        this.setState({ value: \"\" });\n      } else {\n        this.flicker(\"red-bg\");\n      }\n    } else if (event.key === ',') {\n      let newValue = \"\";\n      for (let i = 0; i <= Math.min(this.state.value.length, this.props.currentAnswer[0].length); ++i) {\n        if (i===this.props.currentAnswer[0].length){\n          newValue=this.props.currentAnswer[0];\n          break;\n        }\n        else if (this.state.value.len < i || this.state.value[i] !== this.props.currentAnswer[0][i]) {\n          newValue = this.props.currentAnswer[0].slice(0, i + 1);\n          break;\n        }\n      }\n      this.setState({ value: newValue });\n    } else if (event.key === '.') {\n      this.setState({ value: this.props.currentAnswer[0] });\n    } else if (event.key === '/') {\n      this.props.onCorrectAnswer();\n    }\n  }\n  render() {\n    return (\n      <div className=\"word-input-flex\">\n        <input type=\"text\" className={\"word-input \" + this.state.textInputBG}\n          placeholder={\"type '\" + this.props.currentWord + \"' in the form specified\"} onKeyPress={this.handleKeyPress}\n          onChange={(evt) => { this.setState({ value: evt.target.value.replace(/[^A-Za-zäöÄÖšž]/g, \"\") }); }}\n          ref={this.props.reference} autoFocus value={this.state.value} />\n      </div>\n    )\n  }\n}\n\nfunction getTextWidth(inputText, font) {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  context.font = font;\n  const width = context.measureText(inputText).width;\n  const formattedWidth = Math.ceil(width)// + \"px\"; \n  console.log(formattedWidth);\n}\n\nclass WordManager extends React.Component {\n  constructor(props) {\n    super(props);\n    this.topWords = props.top;\n    this.kotusWords = props.kotus;\n    this.topWordsKeys = Object.keys(this.topWords);\n    this.kotusWordsKeys = Object.keys(this.kotusWords);\n    this.forms = props.forms;\n    this.mode = props.mode;\n    this.formSettingsName = this.mode + \"On\";\n    this.dataSettingsName = this.mode + \"Data\";\n    this.state = {\n      formsOn: JSON.parse(localStorage.getItem(this.formSettingsName)) || props.defaultForms,\n      currentData: JSON.parse(localStorage.getItem(this.dataSettingsName)) || {\n        keys: this.topWordsKeys,\n        data: this.topWords\n      },\n      currentWord: \"\",\n      currentAnswer: \"\",\n      currentTranslation: \"\",\n      currentKotusType: \"\",\n      currentFormName: \"\",\n    };\n\n\n  }\n  componentDidMount() {\n    this.generateNewWord();\n  }\n\n  generateNewWord = () => {\n    const wordIndex = Math.floor(Math.random() * this.state.currentData.keys.length);\n    const word = this.state.currentData.keys[wordIndex];\n\n    const formsOnCount = this.state.formsOn.map(el => (el && el !== -1 ? el : 0)).reduce((a, b) => a + b);\n    let formSubsetIndex = Math.floor(Math.random() * formsOnCount);\n    let trueFormIndex = 0;\n    for (let i = 0; i < this.forms.length; ++i) {\n      if (this.state.formsOn[i] && this.state.formsOn[i] !== -1) {\n        formSubsetIndex--;\n      }\n      if (formSubsetIndex < 0) {\n        break;\n      }\n      trueFormIndex++;\n    }\n\n    const currentEntry = this.state.currentData.data[word];\n    this.setState({\n      currentWord: word,\n      currentFormName: this.forms[trueFormIndex],\n      currentAnswer: currentEntry.forms[trueFormIndex],\n      currentTranslation: currentEntry.tran,\n      currentKotusType: currentEntry.kotus\n    })\n    console.log(currentEntry.forms[trueFormIndex]);\n  }\n\n  onCorrectAnswer = () => {\n    this.generateNewWord();\n  }\n\n  switchOnOff = (indexes) => {\n    if (!Array.isArray(indexes)) {\n      indexes = [indexes];\n    }\n    const afterChange = this.state.formsOn.map((el, i) => indexes.includes(i) && el !== -1 ? (!el) : el);\n    // console.log(indexes)\n    if (afterChange.map(el => ((el && el !== -1) ? el : 0)).reduce((a, b) => a + b) > 0) {\n      this.setState({\n        formsOn: afterChange\n      });\n      localStorage.setItem(this.formSettingsName, JSON.stringify(afterChange));\n    } else {\n      alert('At least one form has to be selected!');\n    }\n    // console.log(afterChange);\n  }\n\n  render() {\n    return (\n      <div>\n        <UserIO onCorrectAnswer={this.onCorrectAnswer} currentWord={this.state.currentWord}\n          currentAnswer={this.state.currentAnswer} currentTranslation={this.state.currentTranslation}\n          currentKotusType={this.state.currentKotusType} currentFormName={this.state.currentFormName} />\n        <NounSettings forms={this.forms} formsOn={this.state.formsOn} onClick={this.switchOnOff} />\n      </div>\n    )\n  }\n}\n\nclass UserIO extends React.Component {\n  render() {\n    // for(let i=100;i>=20;--i){\n    //   getTextWidth(\"päähenkilö\",i+\"px Comfortaa\");\n    // }\n    function computeFontSize(text, defaultSize, textSpace) {\n      const l = text.length;\n      const coeffs = [0.885, -0.0811]\n      let resizedFontSize = Math.max(Math.min(defaultSize, (textSpace / l + coeffs[1]) / coeffs[0]), defaultSize / 4);\n      // console.log(\"Approximate width default \"+(coeffs[0]*defaultSize+coeffs[1])*l+\" changed to size \"+resizedFontSize+\"px and resulting size is \"+(coeffs[0]*resizedFontSize+coeffs[1])*l)\n      return resizedFontSize;\n    }\n    return (\n      <div className=\"word-flag\">\n        <div /*class=\"card gray\"*/>\n          <div className=\"row card-flex\">\n\n            <div className=\"l-stretch\">\n              <FinnishWord finnish_word={this.props.currentWord} fontSize={computeFontSize(this.props.currentWord, 100, 550)} />\n            </div>\n\n            <div className=\"r-stretch\">\n              <RightCard text={this.props.currentTranslation} fontSize={computeFontSize(this.props.currentTranslation, 30, 550)} cls='blue' image={process.env.PUBLIC_URL + \"/img/translation.svg\"} />\n              <RightCard text={this.props.currentFormName} fontSize={computeFontSize(this.props.currentFormName, 30, 550)} cls='red' image={process.env.PUBLIC_URL + \"/img/target.svg\"} />\n              <RightCard text={this.props.currentKotusType} fontSize={computeFontSize(this.props.currentKotusType, 30, 550)} cls='yellow' image={process.env.PUBLIC_URL + \"/img/kotus_type.svg\"} />\n              {/* https://en.wiktionary.org/wiki/Appendix:Finnish_nominal_inflection/nuoripari\n              https://en.wiktionary.org/wiki/Appendix:Finnish_conjugation */}\n            </div>\n\n          </div>\n\n        </div>\n        <div className=\"card-flex\">\n          <UserTextInput onCorrectAnswer={this.props.onCorrectAnswer} currentWord={this.props.currentWord}\n            currentAnswer={this.props.currentAnswer} />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction nounForms() {\n  return [...Array(28).keys()].map(i => (plurality[i >= cases.length ? 1 : 0] + \" \" + cases[i % cases.length]));\n}\n\nReactDOM.render(\n  <WordManager top={topNouns} kotus={kotusNouns} forms={nounForms()}\n    mode={\"nouns\"} defaultForms={[...validSgCases, ...validPlCases]} />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}